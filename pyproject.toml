[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "sw6-water-sensor"
authors = [{name = "Simon Thrane", email = "sthra21@student.aau.dk"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = ["License :: OSI Approved :: MIT License"]
requires-python = ">=3.11.1"
dynamic = ["version", "description"]

dependencies = [
    "numpy >=1.24.1",
    "pyserial",
    "h5py >=3.10.0",
    "matplotlib",
]

[project.urls]
Home = "https://github.com/DenFlyvendeGed/sw6Bachelor"



[project.optional-dependencies]

test = [
    "pytest >=2.7.3",
    "pytest-cov",

]

format = [
    "black",
]

lint = [
    "flake8",
    "flake8-pyproject",
    "pylint",
    "bandit",
]

[tool.flit.module]
name = "python_package"

[tool.bandit]
exclude_dirs = ["build","dist","tests","scripts","venv"]
targets = ["src"]

[tool.black]
line-length = 120

[tool.flake8]
max-line-length = 120
extend-exclude = [
    ".venv"
]
count = true
show-source = true
statistics = true
ignore = [
    "E722",
    "B001",
    "W503",
    "E203",
    "E704",
    "R914",
    "R903",
]

[tool.pylint]
ignore-patterns="test.*?py,conftest.py"
init-hook='import sys; sys.setrecursionlimit(8 * sys.getrecursionlimit())'
jobs=0
recursive = true

[tool.pylint.'MESSAGES CONTROL']
enable="c-extension-no-member"
disable = """
    too-few-public-methods,
    too-many-locals,
    too-many-instance-attributes,
    too-many-arguments,
"""

[tool.pylint.'REPORTS']
evaluation="10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"
output-format="text"
reports="yes"
score="yes"

[tool.pylint.'BASIC']
include-naming-hint="yes"

[tool.pylint.'FORMAT']
ignore-long-lines="^\\s*(# )?.*['\"]?<?https?://\\S+>?"
max-line-length=120

[tool.pylint.'SIMILARITIES']
min-similarity-lines=5

[tool.pylint.'SPELLING']
max-spelling-suggestions=8

[tool.pylint.'STRING']
check-str-concat-over-line-jumps="yes"

[tool.pylint.'TYPECHECK']
generated-members=""
ignored-classes="optparse.Values,thread._local,_thread._local,numpy"
